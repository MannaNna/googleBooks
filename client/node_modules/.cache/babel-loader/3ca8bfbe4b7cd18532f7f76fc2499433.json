{"ast":null,"code":"import _classCallCheck from \"/Users/marianasecu/Desktop/iBookClub/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/marianasecu/Desktop/iBookClub/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/marianasecu/Desktop/iBookClub/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/marianasecu/Desktop/iBookClub/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/marianasecu/Desktop/iBookClub/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/marianasecu/Desktop/iBookClub/client/src/pages/login.js\";\nimport React, { Component } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport NavTabL from \"../components/navTabL\";\nimport NavTabs from \"../components/NavTabs\";\nimport Jumbotron from \"../components/jumbotron\";\nimport GoogleContainer from \"./googleBooksContainer\";\nimport Saved from \"./saved.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false,\n      userID: \"\",\n      name: \"\",\n      email: \"\",\n      picture: \"\"\n    };\n\n    _this.responseGoogle = function (response) {\n      API.updateUser({\n        userID: response.El,\n        name: response.profileObj.name,\n        email: response.profileObj.email,\n        picture: response.profileObj.imageUrl\n      });\n      return _this.signup(response);\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"signup\",\n    value: function signup(response) {\n      this.setState({\n        isLoggedIn: true,\n        userID: response.El,\n        name: response.profileObj.name,\n        email: response.profileObj.email,\n        picture: response.profileObj.imageUrl\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.userID);\n      var AuthContent;\n\n      if (this.state.isLoggedIn) {\n        AuthContent = React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(NavTabs, {\n          src: this.state.picture,\n          name: this.state.name,\n          userID: this.state.userID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(Jumbotron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/search/\".concat(this.state.userID),\n          render: function render(props) {\n            return React.createElement(GoogleContainer, Object.assign({}, props, {\n              userID: _this2.state.userID,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/saved/:\".concat(this.state.userID),\n          render: function render(props) {\n            return React.createElement(Saved, Object.assign({}, props, {\n              userID: _this2.state.userID,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }))));\n      } else {\n        AuthContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            marginLeft: '0px',\n            marginTop: '0px',\n            backgroundColor: \"transparent\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(NavTabL, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(GoogleLogin, {\n          clientId: '194250480637-a0c99ojc4kgkk7i8i4lta3f3rjr07daa.apps.googleusercontent.com',\n          buttonText: \"Login with Google\",\n          onSuccess: this.responseGoogle,\n          onFailure: this.responseGoogle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })), React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/search\",\n          component: Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/saved\",\n          component: Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, AuthContent);\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["/Users/marianasecu/Desktop/iBookClub/client/src/pages/login.js"],"names":["React","Component","FacebookLogin","GoogleLogin","NavTabL","NavTabs","Jumbotron","GoogleContainer","Saved","BrowserRouter","Router","Route","Switch","API","Login","state","isLoggedIn","userID","name","email","picture","responseGoogle","response","updateUser","El","profileObj","imageUrl","signup","setState","console","log","AuthContent","props","marginLeft","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport NavTabL from \"../components/navTabL\";\nimport NavTabs from \"../components/NavTabs\";\nimport Jumbotron from \"../components/jumbotron\";\nimport GoogleContainer from \"./googleBooksContainer\";\nimport Saved from \"./saved.js\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\n\n\nexport default class Login extends Component {\n  state = {\n    isLoggedIn: false,\n    userID: \"\",\n    name: \"\",\n    email: \"\",\n    picture: \"\"\n  }\n\n  \n// Google Response, send user object to DB\n  responseGoogle = response => { \n    \n      API.updateUser({ \n         userID: response.El,\n          name: response.profileObj.name,\n          email: response.profileObj.email,\n          picture: response.profileObj.imageUrl\n       })\n   \n    return this.signup(response);\n  }\n\n\n signup(response) {   \n      this.setState({\n      isLoggedIn: true,\n     userID: response.El,\n     name: response.profileObj.name,\n     email: response.profileObj.email,\n     picture: response.profileObj.imageUrl\n   });\n}\n\n \n  render() {\n    console.log(this.state.userID)\n    let AuthContent;\n \n    if (this.state.isLoggedIn) { \n      AuthContent = (     \n        <Router>\n      <div>\n        <NavTabs src={this.state.picture} name={this.state.name} userID={this.state.userID}/>\n        <Jumbotron />\n        <Switch>\n          <Route exact path={`/search/${this.state.userID}`} render={(props) => <GoogleContainer {...props} userID={this.state.userID}/>} />\n          <Route exact path={`/saved/:${this.state.userID}`} render={(props) => <Saved {...props} userID={this.state.userID}/>} />\n        </Switch>\n      </div>\n    </Router>\n       )\n    } else {\n      AuthContent = (\n        <div >\n        \n        <div style={{\n              marginLeft: '0px',\n              marginTop: '0px',\n              backgroundColor: \"transparent\"\n            }} >\n        <NavTabL />\n        <GoogleLogin\n        clientId={'194250480637-a0c99ojc4kgkk7i8i4lta3f3rjr07daa.apps.googleusercontent.com'}\n        buttonText=\"Login with Google\"\n        onSuccess={this.responseGoogle}\n        onFailure={this.responseGoogle}\n         />\n         </div>\n         <Router>\n        <Switch>\n          <Route exact path=\"/search\" component={Login} />\n          <Route exact path=\"/saved\" component={Login} />\n        </Switch>\n       </Router>\n        </div>\n      );\n    }\n \n    return (\n      <div>\n        {AuthContent}\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}